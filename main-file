import datetime

remedios={}
sugestao = 6
sim = ['SIM', 'S']
nao = ['N√ÉO', 'NAO', 'N']
sim_ou_nao = sim+nao


def add_info_remedio(remedios):
  remedio = input('Qual o nome do rem√©dio?\n‚ñ∫ ').upper().strip()
  intervalo = input('Qual o intervalo entre as dosagens? (Ex: 8h)\n‚ñ∫ ').strip()
  quantidade = input('Quantos comprimidos voc√™ deve tomar por vez\n‚ñ∫ ').strip()
  dias = input('Durante quantos dias voc√™ deve tomar essa medica√ß√£o?\n‚ñ∫ ').strip()
 
  quest_sugest = input('Nossa sugest√£o √© iniciar o medicamento √†s {}h.\nAceita o hor√°rio sugerido?\n‚ñ∫ '.format(sugestao)).upper().strip()
  while quest_sugest not in sim_ou_nao:
    quest_sugest = input('      Por favor, responda apenas com "Sim" ou "N√£o"\n      Aceita o hor√°rio sugerido?\n      ‚ñ∫  ').upper().strip()
  if quest_sugest in sim:
    hora_remedio = str(sugestao)
  elif quest_sugest in nao:
    quest_agora = input('Ok, ent√£o tudo bem a gente come√ßar agora?\n‚ñ∫  ').upper().strip()
    while quest_agora not in sim_ou_nao:
      quest_agora = input('      Por favor, responda apenas com "Sim" ou "N√£o"\n      Tudo bem a gente come√ßar agora?\n      ‚ñ∫  ').upper().strip()
    if quest_agora in sim:
      hora_remedio = str(datetime.datetime.now().hour)
    elif quest_agora in nao:
      hora_remedio = input('Tudo bem. Escolha o hor√°rio que quer iniciar a medica√ß√£o (Ex: 16h)\n‚ñ∫ ').strip()



  remedios[remedio]= {
  "intervalo": int(intervalo.split('h')[0]),
  "quantidade": int(quantidade),
  "dias": int(dias),
  "hora_remedio": int(hora_remedio.split('h')[0])
    
}
  return remedio
  

def definir_alarmes(remedios):
  por_dia= int(24/remedios[remedio]['intervalo'])
  alarmes = []
  hora_alarmes = remedios[remedio]['hora_remedio']
  for i in range(por_dia):
    if hora_alarmes < 24:
      alarmes.append(hora_alarmes)
    elif hora_alarmes >= 24:
      alarmes.append(hora_alarmes-24)
    hora_alarmes+=remedios[remedio]['intervalo']
  remedios[remedio]['alarmes'] = alarmes
  return alarmes

def definir_inicio_fim_remedio(remedios):
  dia_atual = datetime.date.today().day
  data_final = dia_atual + remedios[remedio]['dias']
  hora_final = alarmes[-1]
  remedios[remedio]['data_inicio'] = dia_atual
  remedios[remedio]['data_fim'] = data_final
  remedios[remedio]['hora_fim'] = hora_final
  

# FUN√á√ïES ACIMA ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤

while True:
  remedio = add_info_remedio(remedios)
  alarmes = definir_alarmes(remedios)
  definir_inicio_fim_remedio(remedios)
  quest_break = input('Voc√™ vai tomar mais rem√©dios? ').upper().strip()
  while quest_break not in sim_ou_nao:
    quest_break = input('Por favor, responda apenas com "Sim" ou "N√£o"\n Voc√™ vai tomar mais rem√©dios? ').upper()
  if quest_break in sim:
    sugestao+=1
  elif quest_break in nao:
    print(""" ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº ‚ñº
Confira abaixo as principais informa√ß√µes sobre seu tratamento.
E mais importante: N√£o esque√ßa seus rem√©dios.
Ficamos felizes em poder lhe ajudar nisso.
Fique com a mensagem da nossa rob√¥:
"ü§ñ Isso fica feliz em ser √∫til ü§ñ".
          """)
    for remedio, info in remedios.items():
      print('\033[1;43m'+remedio+'\033[0;0m')
      print('{} comprimido de {} em {} horas por {} dias'.format(remedios[remedio]['quantidade'],remedios[remedio]['intervalo'], remedios[remedio]['intervalo'],remedios[remedio]['dias']))
      print('Voc√™ vai iniciar a medica√ß√£o dia {} √†s {}h. \nE deve tomar a ultima dose dia {} √†s {}h'.format(remedios[remedio]['data_inicio'], remedios[remedio]['hora_remedio'],remedios[remedio]['data_fim'], remedios[remedio]['hora_fim']))
      print('Os hor√°rios do medicamento s√£o:')
      for i in remedios[remedio]['alarmes']:
        print(i, end='h ')
        print()   
    break
